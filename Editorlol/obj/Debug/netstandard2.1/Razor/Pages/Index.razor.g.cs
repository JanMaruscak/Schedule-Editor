#pragma checksum "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cd301441fc46c0450c065d7f8be5051abb81892c"
// <auto-generated/>
#pragma warning disable 1591
namespace Editorlol.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Editorlol;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\janma\source\repos\Editorlol\Editorlol\_Imports.razor"
using Editorlol.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
using BlazeCardsCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
using BlazeCardsCore.State;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
using BlazeCardsCore.Descriptors;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "style", "display:flex; width: 1000px");
            __builder.AddMarkupContent(2, "\r\n    ");
            __builder.OpenElement(3, "button");
            __builder.AddAttribute(4, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 7 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                      AddCard

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(5, "style", "outline: none; border: none; padding:5px;margin:5px");
            __builder.AddContent(6, "+ Add Card");
            __builder.CloseElement();
            __builder.AddMarkupContent(7, "\r\n    ");
            __builder.OpenElement(8, "button");
            __builder.AddAttribute(9, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 8 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                      AddBreak

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(10, "style", "outline:none; border: none; padding:5px;margin:5px");
            __builder.AddContent(11, "+ Add Break");
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n    ");
            __builder.OpenElement(13, "button");
            __builder.AddAttribute(14, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 9 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                      DeleteCard

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(15, "style", "outline:none; border: none; padding:5px;margin:5px");
            __builder.AddContent(16, "- Delete card");
            __builder.CloseElement();
            __builder.AddMarkupContent(17, "\r\n    ");
            __builder.OpenElement(18, "button");
            __builder.AddAttribute(19, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 10 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                      UpdateTimes

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(20, "style", "outline:none; border: none; padding:5px;margin:5px");
            __builder.AddContent(21, "Update times");
            __builder.CloseElement();
            __builder.AddMarkupContent(22, "\r\n    ");
            __builder.OpenElement(23, "select");
            __builder.AddAttribute(24, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 11 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                       SelectClass

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(25, "style", "padding: 5px;margin:5px");
            __builder.AddMarkupContent(26, "\r\n        ");
            __builder.OpenElement(27, "option");
            __builder.AddAttribute(28, "value", "T2");
            __builder.AddContent(29, "T2");
            __builder.CloseElement();
            __builder.AddMarkupContent(30, "\r\n        ");
            __builder.OpenElement(31, "option");
            __builder.AddAttribute(32, "value", "T1");
            __builder.AddContent(33, "T1");
            __builder.CloseElement();
            __builder.AddMarkupContent(34, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(35, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "\r\n\r\n");
            __builder.OpenElement(37, "div");
            __builder.AddAttribute(38, "style", "display:flex; justify-content: center; align-items:center; width: 1000px");
            __builder.AddMarkupContent(39, "\r\n    ");
            __builder.OpenElement(40, "img");
            __builder.AddAttribute(41, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 18 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                   GoLeft

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(42, "src", "/images/chevron-left.svg");
            __builder.AddAttribute(43, "alt", "Alternate Text");
            __builder.AddAttribute(44, "width", "40px");
            __builder.AddAttribute(45, "style", "cursor:pointer; margin-top: 10px");
            __builder.CloseElement();
            __builder.AddMarkupContent(46, "\r\n    ");
            __builder.OpenElement(47, "img");
            __builder.AddAttribute(48, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 19 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                   GoRight

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(49, "src", "/images/chevron-left.svg");
            __builder.AddAttribute(50, "alt", "Alternate Text");
            __builder.AddAttribute(51, "width", "40px");
            __builder.AddAttribute(52, "style", "transform: rotate(180deg); cursor:pointer;margin-top: 10px");
            __builder.CloseElement();
            __builder.AddMarkupContent(53, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(54, "\r\n\r\n");
            __builder.OpenElement(55, "div");
            __builder.AddAttribute(56, "style", "display: flex; margin-top: 25px");
            __builder.AddMarkupContent(57, "\r\n");
#nullable restore
#line 25 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
     foreach (var item in Days)
    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(58, "        ");
            __builder.OpenElement(59, "div");
            __builder.AddAttribute(60, "style", "display: flex; flex-direction: column");
            __builder.AddMarkupContent(61, "\r\n            ");
            __builder.OpenElement(62, "p");
            __builder.AddAttribute(63, "style", "width: 200px; text-align: center; color: black");
            __builder.AddContent(64, 
#nullable restore
#line 28 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                                                                       item.DayOfWeek

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(65, "\r\n            ");
            __builder.OpenElement(66, "p");
            __builder.AddAttribute(67, "style", "width: 200px; text-align:center; color: black");
            __builder.AddContent(68, 
#nullable restore
#line 29 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                                                                      item.Day.ToString()

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(69, ". ");
            __builder.AddContent(70, 
#nullable restore
#line 29 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                                                                                            item.Month.ToString()

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(71, ".");
            __builder.CloseElement();
            __builder.AddMarkupContent(72, "\r\n        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(73, "\r\n");
#nullable restore
#line 31 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(74, "\r\n\r\n");
            __builder.OpenElement(75, "div");
            __builder.AddAttribute(76, "style", "width: 100vw; height: 100vh");
            __builder.AddMarkupContent(77, "\r\n    ");
            __builder.OpenComponent<BlazeCardsCore.Components.CanvasComponent>(78);
            __builder.AddAttribute(79, "State", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<BlazeCardsCore.State.CardState>(
#nullable restore
#line 35 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
                             cardState

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(80, "\r\n");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 38 "C:\Users\janma\source\repos\Editorlol\Editorlol\Pages\Index.razor"
       
    private CardState cardState;
    List<DateTime>
    Days = new List<DateTime>
        ();

    int Week = 0;
    int GoneLeft = 0;
    int GoneRight = 0;

    int MarginTop = 0;
    int Height = 1000;
    int Width = 200;

    string CurClass = "T2";
    Dictionary<string, List<List<VerticalListCard>>> Classes = new Dictionary<string, List<List<VerticalListCard>>>();
    Dictionary<string, ClassInfo> ClassInfos = new Dictionary<string, ClassInfo>();

    List<List<VerticalListCard>> Weeks = new List<List<VerticalListCard>>();

    private void DeleteCard()
    {
        foreach (var item in this.cardState.Selected)
        {
            item.UnhookFromParent();
        }
    }

    void SelectClass(ChangeEventArgs e)
    {
        foreach (var item in Weeks[Week])
        {
            this.cardState.Storage.Cards.Remove(item);
        }

        foreach (var item in Classes[e.Value.ToString()][ClassInfos[e.Value.ToString()].Week])
        {
            this.cardState.Storage.Cards.Add(item);
        }
        Classes[CurClass] = Weeks.ToList();
        Weeks = Classes[e.Value.ToString()].ToList();

        ClassInfos[CurClass].Week = Week;
        ClassInfos[CurClass].GoneLeft = GoneLeft;
        ClassInfos[CurClass].GoneRight = GoneRight;
        ClassInfos[CurClass].Days = Days.ToList();

        Week = ClassInfos[e.Value.ToString()].Week;
        GoneLeft = ClassInfos[e.Value.ToString()].GoneLeft;
        GoneRight = ClassInfos[e.Value.ToString()].GoneRight;
        Days = ClassInfos[e.Value.ToString()].Days.ToList();

        CurClass = e.Value.ToString();

        this.cardState.Canvas.InvokeChange();
    }
    private void AddCard()
    {
        Weeks[Week][0].AddChild(new SchoolCard("VYT", "302", "PN", "14:30-15:45"));
    }
    private void AddBreak()
    {
        Weeks[Week][0].AddChild(new BreakCard());
    }
    private void UpdateTimes()
    {
        foreach (var day in Weeks[Week])
        {
            DateTime s = GetMondayDay();
            TimeSpan ts = new TimeSpan(7, 0, 0);
            s = s.Date + ts;
            foreach (var item in day.Children)
            {
                if (item is SchoolCard)
                {
                    var sch = item as SchoolCard;
                    sch.Time.TextBehavior.Value = $"{s.ToString("HH:mm")} - {s.AddMinutes(45).ToString("HH:mm")}";
                    s = s.AddMinutes(45);
                    sch.InvokeComponentChange();
                }
                else if (item is BreakCard)
                {
                    var br = item as BreakCard;
                    s = s.AddMinutes(int.Parse(br.Text.TextBehavior.Value));
                }
                item.InvokeComponentChange();
            }
        }
    }
    private void GoRight()
    {
        if (Week + 1 == Weeks.Count)
        {
            var newWeek = new List<VerticalListCard>
                ();
            for (int i = 0; i < 5; i++)
            {
                newWeek.Add(GetTemplateDay(i, Width, MarginTop));
            }
            Weeks.Add(newWeek);

            foreach (var item in Weeks[Week])
            {
                this.cardState.Storage.Cards.Remove(item);
            }

            foreach (var item in newWeek)
            {
                this.cardState.Storage.Cards.Add(item);
            }
            GoneRight++;
        }
        else
        {
            foreach (var item in Weeks[Week])
            {
                this.cardState.Storage.Cards.Remove(item);
            }

            foreach (var item in Weeks[Week + 1])
            {
                this.cardState.Storage.Cards.Add(item);
            }
        }
        for (int i = 0; i < Days.Count; i++)
        {
            Days[i] = Days[i].AddDays(7);
        }
        Week++;
        this.cardState.Canvas.InvokeChange();
    }
    private void GoLeft()
    {
        if (Week == 0)
        {
            var newWeek = new List<VerticalListCard>
                ();
            for (int i = 0; i < 5; i++)
            {
                newWeek.Add(GetTemplateDay(i, Width, MarginTop));
            }

            foreach (var item in Weeks[Week])
            {
                this.cardState.Storage.Cards.Remove(item);
            }

            foreach (var item in newWeek)
            {
                this.cardState.Storage.Cards.Add(item);
            }
            Weeks.Insert(0, newWeek);
            GoneLeft--;
        }
        else
        {
            foreach (var item in Weeks[Week])
            {
                this.cardState.Storage.Cards.Remove(item);
            }

            foreach (var item in Weeks[Week - 1])
            {
                this.cardState.Storage.Cards.Add(item);
            }
            Week--;
        }
        for (int i = 0; i < Days.Count; i++)
        {
            Days[i] = Days[i].AddDays(-7);
        }
        this.cardState.Canvas.InvokeChange();
    }
    private DateTime GetMondayDay()
    {
        var today = DateTime.Now;
        if (today.DayOfWeek == DayOfWeek.Saturday)
        {
            return today.AddDays(2);
        }
        if (today.DayOfWeek == DayOfWeek.Sunday)
        {
            return today.AddDays(1);
        }
        today = today.AddDays(-5);

        int daysUntilMonday = ((int)DayOfWeek.Monday - (int)today.DayOfWeek + 7) % 7;
        return today.AddDays(daysUntilMonday);

    }

    protected override void OnInitialized()
    {
        this.cardState = new CardState();
        this.cardState.Mouse.Zoomable = false;
        this.cardState.Mouse.Scrollable = false;
        for (int x = 0; x < 5; x++)
        {
            Days.Add(GetMondayDay().AddDays(x));
        }

        Classes.Add("T2", Weeks);
        Classes.Add("T1", new List<List<VerticalListCard>>());

        ClassInfos.Add("T2", new ClassInfo(0, 0, 0, Days));
        ClassInfos.Add("T1", new ClassInfo(0, 0, 0, Days));

        Console.WriteLine("oenis");
        Classes["T1"].Add(new List<VerticalListCard>());
        for (int i = 0; i < 5; i++)
        {
            Classes["T1"][0].Add(GetTemplateDay(i, Width, MarginTop));
        }
        Weeks.Add(new List<VerticalListCard>());

        for (int i = 0; i < 5; i++)
        {
            var area = new DropAreaCard();
            area.PositionBehavior.Position = new BlazeCardsCore.Models.Vector2f(i * Width, MarginTop);
            area.SizeBehavior.Size = new BlazeCardsCore.Models.Vector2f(Width, Height);
            area.Clickable = false;
            area.Draggable = false;
            area.Classes.Add("school-background");
            area.Classes.Add(i.ToString());
            area.OnDrop += (o, e) =>
            {
                var index = int.Parse(area.Classes.Last());

                DateTime s = GetMondayDay();
                TimeSpan ts = new TimeSpan(7, 0, 0);
                s = s.Date + ts;
                foreach (var item in o.Children)
                {
                    if (item is SchoolCard)
                    {
                        var sch = item as SchoolCard;
                        sch.Time.TextBehavior.Value = $"{s.ToString("HH:mm")} - {s.AddMinutes(45).ToString("HH:mm")}";
                        s = s.AddMinutes(45);
                    }
                    else if (item is BreakCard)
                    {
                        var br = item as BreakCard;
                        s = s.AddMinutes(int.Parse(br.Text.TextBehavior.Value));
                    }
                    item.InvokeComponentChange();
                }
                s = GetMondayDay();
                ts = new TimeSpan(7, 0, 0);
                s = s.Date + ts;
                foreach (var item in e.Cards[0].Parent.Children)
                {
                    if (item is SchoolCard)
                    {
                        var sch = item as SchoolCard;
                        sch.Time.TextBehavior.Value = $"{s.ToString("HH:mm")} - {s.AddMinutes(45).ToString("HH:mm")}";
                        s = s.AddMinutes(45);
                    }
                    else if (item is BreakCard)
                    {
                        var br = item as BreakCard;
                        s = s.AddMinutes(int.Parse(br.Text.TextBehavior.Value));
                    }
                    item.InvokeComponentChange();
                }

                foreach (var item in e.Cards)
                {
                    if (Weeks[Week][index] != item.Parent)
                    {
                        item.UnhookFromParent();
                        Weeks[Week][index].AddChild(item);
                    }
                }
                this.cardState.Canvas.InvokeChange();
            };
            this.cardState.Storage.Cards.Add(area);
        }
        for (int i = 0; i < 5; i++)
        {
            var schoolCard = new SchoolCard("VYT", "302", "PN", "14:30-15:45");

            var list = GetTemplateDay(i, Width, MarginTop);
            list.AddChild(schoolCard);
            Weeks[0].Add(list);
            this.cardState.Storage.Cards.Add(list);
        }
    }
    private VerticalListCard GetTemplateDay(int index, int width, int marginTop)
    {
        VerticalListCard newList = new VerticalListCard();
        newList.Clickable = true;
        newList.Draggable = true;
        newList.Fixed = true;
        newList.PositionBehavior.Position = new BlazeCardsCore.Models.Vector2f(index * width, marginTop);

        return newList;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
